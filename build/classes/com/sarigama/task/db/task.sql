/* SCHEDULER TASKS */

create table if not exists TASK (
	TASK_ID BIGINT NOT NULL,
	TASK_NAME VARCHAR(200) NOT NULL ,
	TASK_DESCRIPTION VARCHAR(200) NULL,
	TASK_EXECUTE VARCHAR(500) NOT NULL,
	CREATED_TIME BIGINT NOT NULL, 
	UPDATED_TIME BIGINT NOT NULL,
	TASK_PRIORITY INT NOT NULL ,
	TASK_STATUS INT NOT NULL ,

    constraint TASK_PK PRIMARY KEY (TASK_ID)
);

create table if not exists SCHEDULE(
	SCHEDULE_ID BIGINT NOT NULL,
	START_TIME BIGINT NOT NULL,
	END_TIME BIGINT NOT NULL,
	IS_RECURING INT NOT NULL ,
	NEXT_RECURING_TIME  BIGINT  NULL,
	LAST_RUNNED_TIME BIGINT NOT NULL,
	EXCECUTED_STATUS BIGINT NOT NULL ,
	CREATED_TIME BIGINT NOT NULL, 
	UPDATED_TIME BIGINT NOT NULL,

    constraint SCHEDULER_PK PRIMARY KEY (SCHEDULE_ID)
);


create table if not exists SCEDULE_EXCECUTED_TIMINIG(
	SCEDULE_TIMING_ID BIGINT NOT NULL ,
	START_TIME BIGINT NOT NULL,
	END_TIME BIGINT NOT NULL
);

create table if not exists TASK_SCHEDULE_MAP (
	TASK_ID BIGINT NOT NULL,
	SCHEDULE_ID BIGINT NOT NULL,
	
	constraint TASK_SCHEDULE_MAP_PK PRIMARY KEY (TASK_ID , SCHEDULE_ID) , 
	constraint TASK_SCHEDULE_MAP_FK1 FOREIGN KEY ( TASK_ID ) references TASK( TASK_ID ),
	constraint TASK_SCHEDULE_MAP_FK2 FOREIGN KEY ( SCHEDULE_ID ) references SCHEDULE( SCHEDULE_ID )

);

create table if not exists RECCURRING_TASK (
	RECCURRING_TASK_ID int NOT NULL,
	RECCURRING_TASK int NOT NULL, 
	RECCURRING_TASK_DESCRIPTION VARCHAR(200) NULL,

	constraint RECCURRING_TASK_PK PRIMARY KEY ( RECCURRING_TASK_ID ) 

);

INSERT INTO RECCURRING_TASK VALUES( 1 , 1 , "Excecute Once") ;
INSERT INTO RECCURRING_TASK VALUES( 2 , 2 , "Excecute Daily") ;
INSERT INTO RECCURRING_TASK VALUES( 4, 4 , "Excecute Weekly") ;
INSERT INTO RECCURRING_TASK VALUES( 8 , 8 , "Excecute Monthly") ;

create table if not exists RECCURRING_TASK_CONFIG (
	RECCURRING_TASK_CONFIG_ID BIGINT NOT NULL,
	RECCURRING_TASK_ID int NOT NULL, 
	RECCURRING_RUN_TYPE int NOT NULL, 
	RECCURRING_RUN_FREQUENCY int NOT NULL, 
	RECCURRING_TASK_DESCRIPTION VARCHAR(200) NULL,

	constraint RECCURRING_TASK_PERIOD_PK PRIMARY KEY ( RECCURRING_TASK_CONFIG_ID ) 

);

INSERT INTO RECCURRING_TASK_CONFIG VALUES( 1 , 1 , 99 , 99 , "Excecute Only Once"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 2 , 2 , 99 , 99 , "Excecute Daily"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 3 , 2 , 99 , 999 , "Excecute Daily Custom"  ) ;

INSERT INTO RECCURRING_TASK_CONFIG VALUES( 4 , 4 , 1 , 99 , "Excecute Weekly Sunday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 5 , 4 , 2 , 99 , "Excecute Weekly Monday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 6 , 4 , 3 , 99 , "Excecute Weekly Tuesday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 7 , 4 , 4 , 99 , "Excecute Weekly Wednesday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 8 , 4 , 5 , 99 , "Excecute Weekly Thursday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 9 , 4 , 6 , 99 , "Excecute Weekly Friday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 10 , 4 , 7 , 99 , "Excecute Weekly Saturday"  ) ;



INSERT INTO RECCURRING_TASK_CONFIG VALUES( 11 , 8 , 1 , 1   , "Excecute Monthly First Sunday" ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 12 , 8 , 1 , 2   , "Excecute Monthly First Monday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 13 , 8 , 1 , 3   , "Excecute Monthly First Tuesday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 14 , 8 , 1 , 4   , "Excecute Monthly First Wednesday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 15 , 8 , 1 , 5   , "Excecute Monthly First Thursday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 16 , 8 , 1 , 6   , "Excecute Monthly First Friday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 17 , 8 , 1 , 7   , "Excecute Monthly First Saturday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 18 , 8 , 1 , 999 , "Excecute Monthly First Custom"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 19 , 8 , 1 , 99  , "Excecute Monthly First date Default"  ) ;

INSERT INTO RECCURRING_TASK_CONFIG VALUES( 20 , 8 , 2 , 1   , "Excecute Monthly End Sunday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 21 , 8 , 2 , 2   , "Excecute Monthly End Monday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 22 , 8 , 2 , 3   , "Excecute Monthly End Tuesday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 23 , 8 , 2 , 4   , "Excecute Monthly End Wednesday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 24 , 8 , 2 , 5   , "Excecute Monthly End Thursday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 25 , 8 , 2 , 6   , "Excecute Monthly End Friday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 26 , 8 , 2 , 7   , "Excecute Monthly End Saturday"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 27 , 8 , 2 , 999 , "Excecute Monthly End Custom"  ) ;
INSERT INTO RECCURRING_TASK_CONFIG VALUES( 28 , 8 , 2 , 99  , "Excecute Monthly End Default"  ) ;

INSERT INTO RECCURRING_TASK_CONFIG VALUES( 29 , 8 , 99 , 999 , "Excecute Monthly Custom"  ) ;


create table if not exists TASK_START_CONFIG (
	TASK_ID BIGINT NOT NULL,
	TASK_START_CONFIG_ID BIGINT NOT NULL, 
	YEAR int NOT NULL, 
	MONTH int NOT NULL, 
	DAY int NOT NULL, 
	HOUR int NOT NULL, 
	MINUTE int NOT NULL, 
	SECOND int NOT NULL, 

	constraint TASK_START_CONFIG_PK PRIMARY KEY ( TASK_ID , TASK_START_CONFIG_ID ) ,
	constraint TASK_START_CONFIG_FK1 FOREIGN KEY ( TASK_ID ) references TASK( TASK_ID ) 

);

create table if not exists TASK_END_CONFIG (
	TASK_ID BIGINT NOT NULL,
	TASK_END_CONFIG_ID BIGINT NOT NULL, 
	YEAR int NOT NULL, 
	MONTH int NOT NULL, 
	DAY int NOT NULL, 
	HOUR int NOT NULL, 
	MINUTE int NOT NULL, 
	SECOND int NOT NULL, 

	constraint TASK_END_CONFIG_PK PRIMARY KEY ( TASK_ID , TASK_END_CONFIG_ID ) ,
	constraint TASK_END_CONFIG_FK1 FOREIGN KEY ( TASK_ID ) references TASK( TASK_ID ) 

);

create table if not exists TASK_RUN_CONFIG (
	TASK_ID BIGINT NOT NULL,
	TASK_RUN_CONFIG_ID BIGINT NOT NULL,
	HOUR INT NOT NULL, 
	MINUTE INT NOT NULL, 
	SECOND INT NOT NULL, 

	constraint TASK_RUN_CONFIG_PK PRIMARY KEY ( TASK_ID , TASK_RUN_CONFIG_ID ) ,
	constraint TASK_RUN_CONFIG_FK1 FOREIGN KEY ( TASK_ID ) references TASK( TASK_ID ) 

);

create table if not exists TASK_CONFIG (
	TASK_ID BIGINT NOT NULL,
	TASK_CONFIG_ID BIGINT NOT NULL, 
	TASK_START_CONFIG_ID BIGINT  NULL, 
	TASK_RUN_CONFIG_ID BIGINT  NULL, 
	TASK_END_CONFIG_ID BIGINT  NULL, 
	RECCURRING_TASK_CONFIG_ID BIGINT  NULL, 
	CUSTOM_DAY INT NULL ,
	TASK_CONFIG_STATUS INT NOT NULL, 
	
	constraint TASK_CONFIG_PK PRIMARY KEY ( TASK_ID , TASK_CONFIG_ID) ,
	constraint TASK_CONFIG_FK1 FOREIGN KEY ( TASK_ID , TASK_START_CONFIG_ID  ) references TASK_START_CONFIG( TASK_ID , TASK_START_CONFIG_ID ) ,
	constraint TASK_CONFIG_FK2 FOREIGN KEY ( TASK_ID , TASK_RUN_CONFIG_ID  ) references TASK_RUN_CONFIG( TASK_ID , TASK_RUN_CONFIG_ID ) ,
	constraint TASK_CONFIG_FK3 FOREIGN KEY ( TASK_ID , TASK_END_CONFIG_ID ) references TASK_END_CONFIG( TASK_ID , TASK_END_CONFIG_ID)  ,
	constraint TASK_CONFIG_FK4 FOREIGN KEY ( RECCURRING_TASK_CONFIG_ID ) references RECCURRING_TASK_CONFIG(  RECCURRING_TASK_CONFIG_ID)
);


/* QUERRY TASK FULL DETAILS*/
SELECT 
T.TASK_ID AS T_TASK_ID , T.TASK_NAME AS T_TASK_NAME ,T.TASK_DESCRIPTION AS T_TASK_DESCRIPTION ,T.TASK_EXECUTE AS T_TASK_EXECUTE,T.CREATED_TIME AS T_CREATED_TIME,T.UPDATED_TIME  AS T_UPDATED_TIME , T.TASK_PRIORITY  AS T_TASK_PRIORITY ,T.TASK_STATUS  AS T_TASK_STATUS,
S.SCHEDULE_ID AS S_SCHEDULE_ID, S.START_TIME AS S_START_TIME,S.END_TIME AS S_END_TIME,S.IS_RECURING AS S_IS_RECURING,S.NEXT_RECURING_TIME AS S_NEXT_RECURING_TIME,S.LAST_RUNNED_TIME AS S_LAST_RUNNED_TIME,S.EXCECUTED_STATUS AS S_EXCECUTED_STATUS ,S.CREATED_TIME AS S_CREATED_TIME,S.UPDATED_TIME AS S_UPDATED_TIME,
TSM.TASK_ID AS TSM_TASK_ID,TSM.SCHEDULE_ID AS TSM_SCHEDULE_ID,
TC.TASK_ID AS TC_TASK_ID,TC.TASK_CONFIG_ID AS TC_TASK_CONFIG_ID ,TC.TASK_START_CONFIG_ID AS TC_TASK_START_CONFIG_ID,TC.TASK_RUN_CONFIG_ID AS TC_TASK_RUN_CONFIG_ID ,TC.TASK_END_CONFIG_ID AS TC_TASK_END_CONFIG_ID,
TC.RECCURRING_TASK_CONFIG_ID AS TC_RECCURRING_TASK_CONFIG_ID ,TC.CUSTOM_DAY AS TC_CUSTOM_DAY ,TC.TASK_CONFIG_STATUS AS TC_TASK_CONFIG_STATUS ,
RTC.RECCURRING_TASK_CONFIG_ID AS RTC_RECCURRING_TASK_CONFIG_ID,RTC.RECCURRING_TASK_ID AS RTC_RECCURRING_TASK_ID,RTC.RECCURRING_RUN_TYPE AS RTC_RECCURRING_RUN_TYPE,
RTC.RECCURRING_RUN_FREQUENCY AS RTC_RECCURRING_RUN_FREQUENCY,RTC.RECCURRING_TASK_DESCRIPTION AS RTC_RECCURRING_TASK_DESCRIPTION,
TSC.TASK_ID AS TSC_TASK_ID,TSC.TASK_START_CONFIG_ID  AS TSC_TASK_START_CONFIG_ID ,TSC.YEAR  AS TSC_YEAR,TSC.MONTH  AS TSC_MONTH,TSC.DAY  AS TSC_DAY,TSC.HOUR  AS TSC_HOUR,TSC.MINUTE  AS TSC_MINUTE,TSC.SECOND  AS TSC_SECOND,
TEC.TASK_ID AS TEC_TASK_ID,TEC.TASK_END_CONFIG_ID AS TEC_TASK_END_CONFIG_ID,TEC.YEAR AS TEC_YEAR,TEC.MONTH AS TEC_MONTH,TEC.DAY AS TEC_DAY,TEC.HOUR AS TEC_HOUR,TEC.MINUTE AS TEC_MINUTE,TEC.SECOND AS TEC_SECOND,
TRC.TASK_ID AS TRC_TASK_ID,TRC.TASK_RUN_CONFIG_ID AS TRC_TASK_RUN_CONFIG_ID,TRC.HOUR AS TRC_HOUR ,TRC.MINUTE AS TRC_MINUTE ,TRC.SECOND AS TRC_SECOND
FROM TASK T
LEFT JOIN TASK_SCHEDULE_MAP TSM ON T.TASK_ID = TSM.TASK_ID
LEFT JOIN SCHEDULE S ON TSM.SCHEDULE_ID = S.SCHEDULE_ID
LEFT JOIN TASK_CONFIG TC ON T.TASK_ID = TC.TASK_ID 
LEFT JOIN RECCURRING_TASK_CONFIG RTC ON TC.RECCURRING_TASK_CONFIG_ID = RTC.RECCURRING_TASK_CONFIG_ID
LEFT JOIN TASK_START_CONFIG TSC ON TC.TASK_ID = TSC.TASK_ID AND TC.TASK_START_CONFIG_ID = TSC.TASK_START_CONFIG_ID
LEFT JOIN TASK_END_CONFIG TEC ON TC.TASK_ID = TEC.TASK_ID AND TC.TASK_END_CONFIG_ID = TEC.TASK_END_CONFIG_ID
LEFT JOIN TASK_RUN_CONFIG TRC ON TC.TASK_ID = TRC.TASK_ID AND TC.TASK_RUN_CONFIG_ID = TRC.TASK_RUN_CONFIG_ID
WHERE TSM.SCHEDULE_ID = 1 ;

/* Update schedule details */

UPDATE SCHEDULE
SET NEXT_RECURING_TIME = ?
, LAST_RUNNED_TIME = ?
, EXCECUTED_STATUS = ? 
, UPDATED_TIME = ?
WHERE SCHEDULE_ID = ?

select a_user.user_id , a_user.user_name , a_user.email , a_user.live ,
    a_security.auth_salt , a_security.USER_EMAIL_UNIQUE_TOKEN , a_identification.IDENTIFICATION_KEY
    from a_user left join a_security on a_user.user_id = a_security.user_id 
    left join  a_identification on a_user.user_id = a_identification.user_id 
    where a_user.user_name = "sharoonpaul808@gmail.com" and a_identification.is_live = 1 ;